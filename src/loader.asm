BDOS	EQU	$0005		; BDOS INVOCATION VECTOR

FCB		EQU	$5C		; Location of default FCB
F_OPEN		EQU	15
F_DMAOFF	EQU	26
F_READ		EQU	20

STKSIZ	EQU	$40		; WORKING STACK SIZE
RESTART	EQU	$0000		; CP/M RESTART VECTOR

	ORG	$100

	LD	SP, STACK		; SET NEW STACK

	LD	HL, (6)			; TOP MEM - UNDER CPM
	DEC	HL

#ifdef PAGEALIGN
	LD	L, 0
	LD	DE, PADDING
	ADD	HL, DE
#endif

	PUSH	HL
	POP	IX
	LD	DE, HL

	LD	HL, APPEND - 1
	LD	BC, APPSIZE
	LDDR

	INC	DE
	PUSH	DE			; CAPTURE START POINT IN IX
	POP	IX

	EX	DE, HL
	LD	DE, $100
	OR	A
	SBC	HL, DE
	EX	DE, HL

	PUSH	IX

	LD	HL, RELOC + 2
	LD	BC, (RELOC)

LOOP:
	CALL	TRANSPOSE

	DEC	BC
	LD	A, B
	OR	C
	JR	NZ, LOOP

	POP	IX
	JP	(IX)

TRANSPOSE:
	PUSH	BC

	LD	B, 8
	LD	A, (HL)
NEXT:
	RLCA
	JR	NC, SKIP

	push	hl
	LD	L, (IX)
	LD	H, (IX + 1)
	ADD	HL, DE
	LD	(IX), L
	LD	(IX + 1), H
	pop	hl

SKIP:
	INC	IX
	DEC	B
	JR	NZ, NEXT

	POP	BC
	INC	HL
	RET

STKSAV:		DEFS	STKSIZ		; STACK
STACK:		EQU	ASMPC		; STACK TOP

RELOC:
BINARY	"./100.reloc"
RELOCSIZE:	EQU	ASMPC - RELOC


APP:
BINARY "./100_code_crt_init.bin"
APPEND:
APPSIZE:	EQU	ASMPC - APP

if (((ASMPC - APP) % 256))
PADDING:	EQU 	((ASMPC - APP) % 256) - 257
else
PADDING		EQU	-1
endif
